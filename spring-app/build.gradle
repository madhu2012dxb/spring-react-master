buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.palantir.docker:com.palantir.docker.gradle.plugin:0.22.1")
        classpath("com.palantir.docker-run:com.palantir.docker-run.gradle.plugin:0.22.1")
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.palantir.docker"
apply plugin: 'com.palantir.docker-run'
apply plugin: 'org.sonarqube'


sourceCompatibility = 1.8
targetCompatibility = 1.8

sonarqube {
    properties {
        property "sonar.projectName", "spring-react"
        property "sonar.projectKey", "spring-react"
        property "sonar.login", "admin"
        property "sonar.password", "Mad@1234"
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-devtools")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

bootJar {
    archivesBaseName = 'spring-react'
    mainClassName = 'com.jaat.geeky.Application'
    from('../react-app/dist') {
        into 'static'
    }
}
docker {
    name "${project.name}:${project.version}"
    dockerfile file('Dockerfile')
    files 'build/libs/spring-react-0.0.1.jar'
}
dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    clean true
}
docker.dependsOn(project.tasks['bootJar'])
bootJar.dependsOn(':react-app:assemble')